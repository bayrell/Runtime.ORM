/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2021 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.ORM.Annotations;

use Runtime.lib;
use Runtime.BaseStruct;
use Runtime.ORM.Connection;
use Runtime.ORM.Query;
use Runtime.ORM.Relation;
use Runtime.ORM.RelationArray;


struct ForeignKey extends BaseStruct
{
	string name = "";
	string table_name = "";
	var primary_key = null;
	var foreign_key = null;
	
	
	/**
	 * Build search query
	 */
	async Query buildSearchQuery(Query q) => q;
	
	
	/**
	 * Resolve foreign key
	 */
	async RelationArray resolve(Connection conn, RelationArray items)
	{
		Collection ids = items
			.map( string (Relation item) => item.get(this.foreign_key) )
			.removeDuplicates()
		;
		
		Query q = new Query
			|> .select(this.table_name)
			|> .where(this.primary_key, "=", ids)
		;
		
		/* Filter */
		q = await this.buildSearchQuery(q);
		
		RelationArray result = await conn.fetchAll(q);
		return result;
	}
	
	
	/**
	 * Resolve all
	 */
	async RelationArray resolveAll(Connection conn)
	{
		Query q = new Query
			|> .select(this.table_name)
		;
		
		/* Filter */
		q = await this.buildSearchQuery(q);
		
		RelationArray result = await conn.fetchAll(q);
		return result;
	}
}